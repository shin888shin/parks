version: 0.2

env:
  variables:
    COLOR: "purple"

phases:
  install:
    commands:
      - echo Entered the install phase...
      # - aws --version
      # - apt-get update -y
      # - echo Install ended
    # runtime-versions:
    #     docker: 18

    finally:
      - echo This always runs - install finally
  pre_build:
    commands:
      - echo Entered the pre_build phase...
      - echo "+++> COLOR - $COLOR"
      - aws --version
      - echo "+++> 1"
      - echo "+++> AWS_DEFAULT_REGION - $AWS_DEFAULT_REGION"
      - echo "+++> 2"
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - REPOSITORY_URI=320502943329.dkr.ecr.us-east-1.amazonaws.com/parks
      - echo "+++> REPOSITORY_URI - $REPOSITORY_URI"
      - echo "+++> CODEBUILD_RESOLVED_SOURCE_VERSION - $CODEBUILD_RESOLVED_SOURCE_VERSION"
      - echo "+++> CODEBUILD_SOURCE_REPO_URL - $CODEBUILD_SOURCE_REPO_URL"
      - echo "+++> CODEBUILD_BUILD_ID - $CODEBUILD_BUILD_ID"
      - echo "+++> CODEBUILD_SOURCE_VERSION - $CODEBUILD_SOURCE_VERSION"
      - echo "+++> CODEBUILD_WEBHOOK_HEAD_REF - $CODEBUILD_WEBHOOK_HEAD_REF"
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-8)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
      - echo "+++> COMMIT_HASH - $COMMIT_HASH"
      - echo "+++> IMAGE_TAG - $IMAGE_TAG"
      - echo Pre build ended
    finally:
      - echo This always runs - pre_build finally
  build:
    commands:
      - echo Entered the build phase...
      - echo Build started on `date`
      - echo Building docker image
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      # # https://stackoverflow.com/questions/58849736/did-not-find-the-image-definition-file-imagedefinitions-json
      # - echo Building imagedefinitions.json
      # - apt-get install jq -y
      # - ContainerName="parks_api"
      # - ImageURI=$(cat imageDetail.json | jq -r '.ImageURI')
      # - printf '[{"name":"CONTAINER_NAME","imageUri":"IMAGE_URI"}]' > imagedefinitions.json
      # - sed -i -e "s|CONTAINER_NAME|$ContainerName|g" imagedefinitions.json
      # - sed -i -e "s|IMAGE_URI|$ImageURI|g" imagedefinitions.json
      # - cat imagedefinitions.json
      - echo Build ended
    finally:
      - echo This always runs - build finally
  post_build:
    commands:
      - echo Entered the post_build phase...
      - echo Build completed on `date`
      - echo Pushing the docker image
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Create imagedefinitions.json
      - printf '[{"name":"parks-codebuild","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json
      - echo Completed the post_build phase

artifacts:
  files:
    - imagedefinitions.json
